server {
    listen       80;
    listen  [::]:80;
    server_name  localhost;

    #access_log  /var/log/nginx/host.access.log  main;

    location / {
        root   /media;
        index  index.html index.htm;
    }


    location /api/ {
         #rewrite /api/(.*) /$1 break;
         proxy_pass   http://192.168.10.153:3014;
    }

    #error_page  404              /404.html;

    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }

    # proxy the PHP scripts to Apache listening on 127.0.0.1:80
    #
    #location ~ \.php$ {
    #    proxy_pass   http://127.0.0.1;
    #}

    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
    #
    #location ~ \.php$ {
    #    root           html;
    #    fastcgi_pass   127.0.0.1:9000;
    #    fastcgi_index  index.php;
    #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
    #    include        fastcgi_params;
    #}

    # deny access to .htaccess files, if Apache's document root
    # concurs with nginx's one
    #
    #location ~ /\.ht {
    #    deny  all;
    #}
}


server {
listen       443 ssl http2 default_server;
listen       [::]:443 ssl http2 default_server;
server_name  localhost;
client_max_body_size 4096m;

location /api/ {
	 #rewrite /api/(.*) /$1 break;
	 proxy_pass   http://192.168.10.153:3014;
}
	
location / {
    root   /media;
    index  index.html index.htm;
    try_files $uri /index.html;
    error_page 404 =200         /empty.jpeg; # 错误页面
    error_page 500 502 503 504 =200 /empty.jpeg; # 错误页面
    add_header 'Access-Control-Allow-Origin' '*';
    add_header 'Access-Control-Allow-Credentials' 'true';
    add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
    add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';
  }
ssl_certificate "/echainbuy.crt";
ssl_certificate_key "/echainbuy.key";
ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
}
